{"version":3,"sources":["components/productspage/product.jsx","components/productspage/products.jsx","components/shoppingcartpage/shoppingcartitem.jsx","components/empty-page.jsx","components/shoppingcartpage/shoppingcart.jsx","components/navigationbar.jsx","components/checkoutpage/checkout.jsx","App.js","serviceWorker.js","index.js"],"names":["Product","Card","className","Img","variant","src","this","props","path","Body","Title","name","Text","description","Row","Col","price","Button","onClick","onAddProduct","product","fontSize","React","Component","Products","CardColumns","jsonData","map","key","id","ShoppingCartItem","Header","Math","floor","random","Container","item","quantity","Figure","Image","width","height","alt","ButtonGroup","vertical","onSubtractProduct","Footer","Empty","Fragment","border","style","title","ShoppingCart","items","some","textAlign","to","ListGroup","filter","idx","NavigationBar","Navbar","bg","sticky","Brand","Badge","total","pill","onReset","Checkout","prices","quantities","grandTotal","i","length","Table","striped","bordered","hover","responsive","thumbnail","toFixed","App","state","product_data","handleAddProduct","bind","handleSubtractProduct","showProducts","showShoppingCart","handleReset","titleN","itemName","notifType","store","addNotification","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","pauseOnHover","index","findIndex","setState","makeToast","onProducts","onShoppingCart","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.5cd0981d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Card, Row, Col } from \"react-bootstrap\";\nimport { MdAddShoppingCart } from \"react-icons/md\";\nimport \"./product.css\";\n\nimport \"react-notifications-component/dist/theme.css\";\nimport \"animate.css\";\n\nclass Product extends React.Component {\n    render() {\n        return (\n            <Card className=\"shadow-lg\">\n                <Card.Img variant=\"top\" src={this.props.path} />\n                <Card.Body>\n                    <Card.Title>{this.props.name}</Card.Title>\n                    <Card.Text>{this.props.description}</Card.Text>\n                    <br />\n                    <Row>\n                        <Col>\n                            <Card.Text className=\"text-middle\">\n                                <strong>Price: </strong>\n                                <em>\n                                    <strong>â‚¬{this.props.price}</strong>\n                                </em>\n                            </Card.Text>\n                        </Col>\n                        <Col>\n                            <Button\n                                onClick={() =>\n                                    this.props.onAddProduct(this.props.product)\n                                }\n                                className=\"float-right\"\n                                variant=\"secondary\"\n                            >\n                                <MdAddShoppingCart\n                                    className=\"mr-2\"\n                                    fontSize=\"1.5em\"\n                                />\n                                Add to Cart\n                            </Button>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default Product;\n","import React from \"react\";\nimport Product from \"./product\";\nimport { CardColumns } from \"react-bootstrap\";\n\nclass Products extends React.Component {\n    render() {\n        return (\n            <CardColumns>\n                {this.props.jsonData.map((product) => (\n                    <Product\n                        key={product.id}\n                        product={product}\n                        name={product.name}\n                        description={product.description}\n                        price={product.price}\n                        path={product.path}\n                        onAddProduct={this.props.onAddProduct}\n                    />\n                ))}\n            </CardColumns>\n        );\n    }\n}\n\nexport default Products;\n","import React from \"react\";\nimport \"./shoppingcartitem.css\";\nimport {\n    Button,\n    ButtonGroup,\n    Card,\n    Col,\n    Container,\n    Figure,\n    Row,\n} from \"react-bootstrap\";\nimport { FiPlus, FiMinus } from \"react-icons/fi\";\n\nclass ShoppingCartItem extends React.Component {\n    render() {\n        return (\n            <Card>\n                <Card.Header>\n                    <strong>\n                        Product ID:{\" \"}\n                        {Math.floor(Math.random() * 23467283 + 9865)}\n                    </strong>\n                </Card.Header>\n                <Container>\n                    <Card.Body>\n                        <Row>\n                            <Col>\n                                <Card.Title className=\"text-left\">\n                                    QUANTITY\n                                </Card.Title>\n                                <Card.Text className=\"text-justify large-font\">\n                                    {this.props.item.quantity}\n                                </Card.Text>\n                            </Col>\n                            <Col>\n                                <Figure className=\"image-sizing\">\n                                    <Figure.Image\n                                        width={300}\n                                        height={320}\n                                        alt={this.props.item.name}\n                                        src={this.props.item.path}\n                                    />\n                                </Figure>\n                            </Col>\n                            <Col>\n                                <Card.Title>{this.props.item.name}</Card.Title>\n                                <Card.Text>\n                                    {this.props.item.description}\n                                </Card.Text>\n                            </Col>\n                            <Col>\n                                <ButtonGroup vertical>\n                                    <Button\n                                        variant=\"outline-success\"\n                                        onClick={() =>\n                                            this.props.onAddProduct(\n                                                this.props.item\n                                            )\n                                        }\n                                    >\n                                        <FiPlus fontSize=\"10em\" />\n                                    </Button>\n                                    <Button\n                                        variant=\"outline-danger\"\n                                        onClick={() =>\n                                            this.props.onSubtractProduct(\n                                                this.props.item\n                                            )\n                                        }\n                                    >\n                                        <FiMinus fontSize=\"10em\" />\n                                    </Button>\n                                </ButtonGroup>\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Container>\n                <Card.Footer className=\"text-muted text-center\">\n                    Stay Home, Stay Safe!\n                </Card.Footer>\n            </Card>\n        );\n    }\n}\n\nexport default ShoppingCartItem;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./empty-page.css\";\n\nconst Empty = (props) => (\n    <React.Fragment>\n        <Card\n            className=\"center-screen shadow-cool text-center\"\n            border=\"dark\"\n            style={{ width: \"18rem\" }}\n        >\n            <Card.Header>\n                <strong>{props.title}</strong>\n            </Card.Header>\n            <Card.Body>\n                <Card.Title>\n                    Please add the products you like to the add, in order to see\n                    them here.\n                </Card.Title>\n            </Card.Body>\n        </Card>\n    </React.Fragment>\n);\n\nexport default Empty;\n","import React from \"react\";\nimport ShoppingCartItem from \"./shoppingcartitem\";\nimport { Container, ListGroup, Button } from \"react-bootstrap\";\nimport { FaMoneyCheck } from \"react-icons/fa\";\nimport { RiArrowRightSLine } from \"react-icons/ri\";\nimport Empty from \"../empty-page\";\nimport { Link } from \"react-router-dom\";\n\nclass ShoppingCart extends React.Component {\n    render() {\n        if (!this.props.items.some((item) => item.quantity > 0)) {\n            return <Empty title=\"NO ITEMS IN CART\" />;\n        } else\n            return (\n                <React.Fragment>\n                    <br />\n                    <Container style={{ textAlign: \"center\" }}>\n                        <Link to=\"/checkout\">\n                            <Button variant=\"warning\">\n                                <FaMoneyCheck\n                                    className=\"mr-5\"\n                                    fontSize=\"10em\"\n                                />\n                                <strong>CHECKOUT</strong>\n                                <RiArrowRightSLine fontSize=\"10em\" />\n                            </Button>\n                        </Link>\n                    </Container>\n                    <br />\n                    <ListGroup>\n                        {this.props.items\n                            .filter((item) => item.quantity > 0)\n                            .map((item, idx) => (\n                                <ShoppingCartItem\n                                    key={idx}\n                                    item={item}\n                                    onAddProduct={this.props.onAddProduct}\n                                    onSubtractProduct={\n                                        this.props.onSubtractProduct\n                                    }\n                                />\n                            ))}\n                    </ListGroup>\n                    <br />\n                    <Container style={{ textAlign: \"center\" }}>\n                        <Link to=\"/checkout\">\n                            <Button variant=\"warning\">\n                                <FaMoneyCheck\n                                    className=\"mr-5\"\n                                    fontSize=\"10em\"\n                                />\n                                <strong>CHECKOUT</strong>\n                                <RiArrowRightSLine fontSize=\"10em\" />\n                            </Button>\n                        </Link>\n                    </Container>\n                    <br />\n                </React.Fragment>\n            );\n    }\n}\n\nexport default ShoppingCart;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Badge, Navbar, Button } from \"react-bootstrap\";\nimport { FaShoppingBag } from \"react-icons/fa\";\nimport { RiRefreshLine } from \"react-icons/ri\";\nimport { AiTwotoneHome } from \"react-icons/ai\";\n\nconst NavigationBar = (props) => {\n    return (\n        <React.Fragment>\n            <Navbar\n                className=\"justify-content-between\"\n                bg=\"dark\"\n                variant=\"dark\"\n                sticky=\"top\"\n            >\n                <Link to=\"/online-shopping/\">\n                    <Navbar.Brand>THE SAVAGE SHOPPING SPREE</Navbar.Brand>\n                </Link>\n\n                <Navbar.Text style={{ fontSize: \"1.2em\" }}>\n                    <strong>\n                        Total in Cart:{\" \"}\n                        <Badge\n                            variant={props.total !== 0 ? \"info\" : \"warning\"}\n                            pill\n                        >\n                            {props.total ? props.total : \"Zero\"}\n                        </Badge>\n                    </strong>\n                </Navbar.Text>\n                <div>\n                    <Link to=\"/online-shopping/\">\n                        <Button variant=\"outline-success\" className=\"mr-2\">\n                            <AiTwotoneHome className=\"mr-1\" fontSize=\"1.3em\" />\n                            Home{\" \"}\n                        </Button>\n                    </Link>\n\n                    <Button\n                        onClick={() => props.onReset()}\n                        variant=\"outline-info\"\n                        className=\"mr-2\"\n                    >\n                        <RiRefreshLine className=\"mr-1\" fontSize=\"1.3em\" />{\" \"}\n                        Reset Cart\n                    </Button>\n                    <Link to=\"/online-shopping/shopping-cart/\">\n                        <Button variant=\"outline-light\" className=\"mr-2\">\n                            <FaShoppingBag className=\"mr-1\" fontSize=\"1.2em\" />{\" \"}\n                            Shopping Cart\n                        </Button>\n                    </Link>\n                </div>\n            </Navbar>\n        </React.Fragment>\n    );\n};\n\nexport default NavigationBar;\n","import React from \"react\";\nimport { Card, Image, Table } from \"react-bootstrap\";\nimport Empty from \"../empty-page\";\n\nclass Checkout extends React.Component {\n    render() {\n        if (!this.props.items.some((item) => item.quantity > 0))\n            return <Empty title=\"NO ITEMS IN SUMMARY\" />;\n        else {\n            const prices = this.props.items\n                .filter((item) => item.quantity > 0)\n                .map((item) => item.price);\n\n            const quantities = this.props.items\n                .filter((item) => item.quantity > 0)\n                .map((item) => item.quantity);\n\n            let grandTotal = 0;\n            for (let i = 0; i < prices.length; i++) {\n                grandTotal += prices[i] * quantities[i];\n            }\n\n            return (\n                <React.Fragment>\n                    <Card>\n                        <Table striped bordered hover variant=\"dark\" responsive>\n                            <thead>\n                                <tr>\n                                    <th>Sr. No.:</th>\n                                    <th>Product Name</th>\n                                    <th>Product Image</th>\n                                    <th>Price</th>\n                                    <th>Quantity</th>\n                                    <th>Total</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.props.items\n                                    .filter((item) => item.quantity > 0)\n                                    .map((item, idx) => {\n                                        return (\n                                            <React.Fragment>\n                                                <tr key={idx}>\n                                                    <td>{idx + 1}</td>\n                                                    <td> {item.name} </td>\n                                                    <td>\n                                                        {\" \"}\n                                                        <Image\n                                                            thumbnail\n                                                            width={100}\n                                                            height=\"auto\"\n                                                            src={item.path}\n                                                        ></Image>{\" \"}\n                                                    </td>\n                                                    <td> â‚¬{item.price} </td>\n                                                    <td> {item.quantity} </td>\n                                                    <td>\n                                                        â‚¬\n                                                        {(\n                                                            item.price *\n                                                            item.quantity\n                                                        ).toFixed(2)}\n                                                    </td>\n                                                </tr>\n                                            </React.Fragment>\n                                        );\n                                    })}\n                            </tbody>\n                        </Table>\n                        <Card.Footer className=\"text-right\">\n                            <strong>\n                                GRAND TOTAL:{\" \"}\n                                <span style={{ fontSize: \"2em\" }}>\n                                    â‚¬{grandTotal.toFixed(2)}\n                                </span>\n                            </strong>\n                        </Card.Footer>\n                    </Card>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default Checkout;\n","import React, { Component } from \"react\";\nimport product_data from \"./JSON/data.json\";\nimport Products from \"./components/productspage/products\";\nimport ShoppingCart from \"./components/shoppingcartpage/shoppingcart\";\nimport NavigationBar from \"./components/navigationbar\";\nimport Checkout from \"./components/checkoutpage/checkout\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ReactNotification, { store } from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport \"animate.css\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            total: 0,\n            items: [...product_data],\n        };\n\n        this.handleAddProduct = this.handleAddProduct.bind(this);\n        this.handleSubtractProduct = this.handleSubtractProduct.bind(this);\n        this.showProducts = this.showProducts.bind(this);\n        this.showShoppingCart = this.showShoppingCart.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    makeToast(titleN, itemName, notifType) {\n        return store.addNotification({\n            title: titleN,\n            message: itemName,\n            type: notifType,\n            insert: \"bottom\",\n            container: \"bottom-center\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n                duration: 1000,\n                onScreen: false,\n                pauseOnHover: true,\n            },\n        });\n    }\n\n    handleAddProduct(item) {\n        let items = [...this.state.items];\n        let index = items.findIndex((i) => i.id === item.id);\n        let total = this.state.total;\n        total++;\n        items[index] = { ...item };\n        items[index].quantity++;\n        this.setState({ total, items });\n        this.makeToast(\"Product Added to Cart!\", items[index].name, \"success\");\n    }\n\n    handleSubtractProduct(item) {\n        let items = [...this.state.items];\n        let index = items.findIndex((i) => i.id === item.id);\n        let total = this.state.total;\n        total--;\n        items[index] = { ...item };\n        items[index].quantity--;\n        this.setState({ total, items });\n\n        const title = total !== 0 ? \"Removed From Cart!\" : \"Empty Cart!\";\n        const message =\n            total !== 0\n                ? items[index].name\n                : \"All items from the Cart have been removed.\";\n        const notifType = title !== \"Empty Cart!\" ? \"danger\" : \"warning\";\n        this.makeToast(title, message, notifType);\n    }\n\n    showProducts() {\n        return (\n            <Products\n                jsonData={this.state.items}\n                onAddProduct={this.handleAddProduct}\n            />\n        );\n    }\n\n    showShoppingCart() {\n        return (\n            <ShoppingCart\n                onAddProduct={this.handleAddProduct}\n                onSubtractProduct={this.handleSubtractProduct}\n                items={this.state.items}\n            />\n        );\n    }\n\n    handleReset() {\n        let items = [...this.state.items];\n        items.map((item) => (item.quantity = 0));\n        this.setState({ total: 0, items });\n        this.makeToast(\n            \"Reset Successful!\",\n            \"Cart has been successfully reset.\",\n            \"info\"\n        );\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ReactNotification />\n                <Router>\n                    <React.Fragment>\n                        <NavigationBar\n                            onProducts={this.showProducts}\n                            onShoppingCart={this.showShoppingCart}\n                            total={this.state.total}\n                            onReset={this.handleReset}\n                        />\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/online-shopping/\"\n                                component={this.showProducts}\n                            />\n                            <Route\n                                path=\"/online-shopping/shopping-cart/\"\n                                component={this.showShoppingCart}\n                            />\n                            <Route path=\"/online-shopping/checkout\">\n                                <Checkout items={this.state.items} />\n                            </Route>\n                        </Switch>\n                    </React.Fragment>\n                </Router>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}